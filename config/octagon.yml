openapi: 3.0.3
info:
  title: Octagon AI API
  version: 1.0.0
  description: API for Octagon AI's backend services.
paths:
  /api/aimodels/:
    get:
      operationId: aimodels_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: problem
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: integer
      tags:
      - aimodels
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AIModel'
          description: ''
    post:
      operationId: aimodels_create
      tags:
      - aimodels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: ''
  /api/aimodels/{id}/:
    get:
      operationId: aimodels_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ai model.
        required: true
      tags:
      - aimodels
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: ''
    put:
      operationId: aimodels_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ai model.
        required: true
      tags:
      - aimodels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: ''
    patch:
      operationId: aimodels_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ai model.
        required: true
      tags:
      - aimodels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAIModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAIModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAIModel'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: ''
    delete:
      operationId: aimodels_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ai model.
        required: true
      tags:
      - aimodels
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/evaluate/{id}:
    post:
      operationId: evaluate_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - evaluate
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/problems/:
    get:
      operationId: problems_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - problems
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
          description: ''
    post:
      operationId: problems_create
      tags:
      - problems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Problem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Problem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Problem'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: ''
  /api/problems/{id}/:
    get:
      operationId: problems_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this problem.
        required: true
      tags:
      - problems
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: ''
    put:
      operationId: problems_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this problem.
        required: true
      tags:
      - problems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Problem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Problem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Problem'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: ''
    patch:
      operationId: problems_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this problem.
        required: true
      tags:
      - problems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProblem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProblem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProblem'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: ''
    delete:
      operationId: problems_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this problem.
        required: true
      tags:
      - problems
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/types/:
    get:
      operationId: types_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Type'
          description: ''
    post:
      operationId: types_create
      tags:
      - types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Type'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Type'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Type'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Type'
          description: ''
  /api/types/{id}/:
    get:
      operationId: types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this type.
        required: true
      tags:
      - types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Type'
          description: ''
    put:
      operationId: types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this type.
        required: true
      tags:
      - types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Type'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Type'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Type'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Type'
          description: ''
    patch:
      operationId: types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this type.
        required: true
      tags:
      - types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedType'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Type'
          description: ''
    delete:
      operationId: types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this type.
        required: true
      tags:
      - types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/verify/{id}:
    post:
      operationId: verify_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyModel'
          description: ''
components:
  schemas:
    AIModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        problem_name:
          type: string
          readOnly: true
        type_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        nevermind_tag:
          type: string
          nullable: true
          maxLength: 255
        file:
          type: string
          format: uri
          nullable: true
        accuracy:
          type: number
          format: double
          nullable: true
        problem:
          type: integer
          nullable: true
        type:
          type: integer
          nullable: true
      required:
      - description
      - id
      - name
      - problem_name
      - type_name
    PatchedAIModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        problem_name:
          type: string
          readOnly: true
        type_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        nevermind_tag:
          type: string
          nullable: true
          maxLength: 255
        file:
          type: string
          format: uri
          nullable: true
        accuracy:
          type: number
          format: double
          nullable: true
        problem:
          type: integer
          nullable: true
        type:
          type: integer
          nullable: true
    PatchedProblem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        best_accuracy:
          type: string
          readOnly: true
        total_models:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        data_url:
          type: string
          maxLength: 255
    PatchedType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
    Problem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        best_accuracy:
          type: string
          readOnly: true
        total_models:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        data_url:
          type: string
          maxLength: 255
      required:
      - best_accuracy
      - data_url
      - description
      - id
      - name
      - total_models
    Type:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
      required:
      - description
      - id
      - name
    VerifyModel:
      type: object
      properties:
        x:
          type: array
          items:
            type: number
            format: double
      required:
      - x
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
